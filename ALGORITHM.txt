Problem 1: Calculate the Sum of Natural Numbers

Write an algorithm that calculates the sum of all natural numbers from 1 to a given number n.

The user should input a value for n.
The algorithm should compute the sum using a loop and display the result.

Algorithm:
1. Start
2. Input a number `n`
3. Initialize a variable `sum` to 0
4. Use a loop to iterate from 1 to `n`:
   - Add the current number to `sum`
5. Display the value of `sum`
6. End

______________________________________________________

Problem 2: Check for Prime Number
Write an algorithm that checks if a given number n is a prime number or not.

The user should input a value for n.
The algorithm should check whether the number is divisible by any number other than 1 and itself.

Algorithm:
1. Start
2. Input a number `n`
3. If `n` is less than 2, it is not a prime number
4. Use a loop to check divisibility from 2 to `âˆšn`:
   - If `n` is divisible by any number in this range, it is not a prime number
5. If no divisors are found, `n` is a prime number
6. Display the result
7. End

______________________________________________________

Problem 3:  Find the Maximum of Three Numbers
Write an algorithm that takes three numbers as input and finds the largest of them.

The user should input three values: a, b, and c.
The algorithm should compare the numbers and print the maximum value.

Algorithm:
1. Start
2. Input three numbers `a`, `b`, and `c`
3. Compare `a` and `b` to find the larger of the two
4. Compare the result with `c` to find the largest number
5. Display the maximum value
6. End

______________________________________________________

Problem 4:  Factorial Calculation
Write an algorithm that calculates the factorial of a number n.

The user should input a number n.
The algorithm should compute the factorial by multiplying all the integers from 1 to n.

Algorithm:
1. Start
2. Input a number `n`
3. Initialize a variable `factorial` to 1
4. Use a loop to multiply all integers from 1 to `n`:
   - `factorial = factorial * i`
5. Display the value of `factorial`
6. End

_____________________________________________________

Problem 5:  Check if a Number is Even or Odd
Write an algorithm that checks if a given number n is even or odd.

The user should input a value for n.
The algorithm should check whether n is divisible by 2 and display the result as either "Even" or "Odd".

Algorithm:
1. Start
2. Input a number `n`
3. Check if `n` is divisible by 2:
   - If yes, display "Even"
   - If no, display "Odd"
4. End

______________________________________________________

